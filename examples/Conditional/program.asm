section .bss
	variable_label: resq 1

global _start
section .text

_start:
	call variable_assignment_0
	call cond_stmt_1_1
	call return_stmt_2_return_2
	mov rax, 60 
	xor rdi, rdi
	syscall

variable_assignment_0:
	call variable_assignment_0_variable_expr_eval_0_0
	mov [variable_label], rax
	ret
variable_assignment_0_variable_expr_eval_0_0:
	mov rax, 2
	ret
cond_stmt_1_1:
	call cond_stmt_1_1_eval_cond_1_1
	cmp rax, 1
	je cond_stmt_1_1_then_execute_body
	jne cond_stmt_1_else_execute_body
	ret
cond_stmt_1_1_eval_cond_1_lhs_eval_1:
	mov rax, [variable_label]
	ret
cond_stmt_1_1_eval_cond_1_rhs_eval_1:
	mov rax, 1
	ret
cond_stmt_1_1_eval_cond_1_1:
	call cond_stmt_1_1_eval_cond_1_lhs_eval_1
	push rax
	call cond_stmt_1_1_eval_cond_1_rhs_eval_1
	mov rbx, rax
	pop rax
	cmp rax, rbx
	sete al
	movzx rax, al
	ret
cond_stmt_1_1_then_execute_body:
	call cond_stmt_1_1_then_0variable_assignment_0
	ret
cond_stmt_1_1_then_0variable_assignment_0:
	call cond_stmt_1_1_then_0variable_assignment_0_variable_expr_eval_0_0
	mov [variable_label], rax
	ret
cond_stmt_1_1_then_0variable_assignment_0_variable_expr_eval_0_lhs_eval_0:
	mov rax, [variable_label]
	ret
cond_stmt_1_1_then_0variable_assignment_0_variable_expr_eval_0_rhs_eval_0:
	mov rax, 3
	ret
cond_stmt_1_1_then_0variable_assignment_0_variable_expr_eval_0_0:
	call cond_stmt_1_1_then_0variable_assignment_0_variable_expr_eval_0_lhs_eval_0
	push rax
	call cond_stmt_1_1_then_0variable_assignment_0_variable_expr_eval_0_rhs_eval_0
	mov rbx, rax
	pop rax
	imul rax, rbx
	ret
cond_stmt_1_else_execute_body:
	call cond_stmt_1_else_0else_stmt_0cond_stmt_0_0
	ret
cond_stmt_1_else_0else_stmt_0cond_stmt_0_0:
	call cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_eval_cond_0_0
	cmp rax, 1
	je cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_execute_body
	ret
cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_eval_cond_0_0:
	mov rax, 1
	ret
cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_execute_body:
	call cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_0cond_stmt_0_0
	ret
cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_0cond_stmt_0_0:
	call cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_0cond_stmt_0_0_eval_cond_0_0
	cmp rax, 1
	je cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_0cond_stmt_0_0_then_execute_body
	jne cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_0cond_stmt_0_else_execute_body
	ret
cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_0cond_stmt_0_0_eval_cond_0_lhs_eval_0:
	mov rax, [variable_label]
	ret
cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_0cond_stmt_0_0_eval_cond_0_rhs_eval_0:
	mov rax, 2
	ret
cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_0cond_stmt_0_0_eval_cond_0_0:
	call cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_0cond_stmt_0_0_eval_cond_0_lhs_eval_0
	push rax
	call cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_0cond_stmt_0_0_eval_cond_0_rhs_eval_0
	mov rbx, rax
	pop rax
	cmp rax, rbx
	sete al
	movzx rax, al
	ret
cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_0cond_stmt_0_0_then_execute_body:
	call cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_0cond_stmt_0_0_then_0variable_assignment_0
	ret
cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_0cond_stmt_0_0_then_0variable_assignment_0:
	call cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_0cond_stmt_0_0_then_0variable_assignment_0_variable_expr_eval_0_0
	mov [variable_label], rax
	ret
cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_0cond_stmt_0_0_then_0variable_assignment_0_variable_expr_eval_0_0:
	mov rax, 2
	ret
cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_0cond_stmt_0_else_execute_body:
	call cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_0cond_stmt_0_else_0else_stmt_0cond_stmt_0_0
	ret
cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_0cond_stmt_0_else_0else_stmt_0cond_stmt_0_0:
	call cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_0cond_stmt_0_else_0else_stmt_0cond_stmt_0_0_eval_cond_0_0
	cmp rax, 1
	je cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_0cond_stmt_0_else_0else_stmt_0cond_stmt_0_0_then_execute_body
	ret
cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_0cond_stmt_0_else_0else_stmt_0cond_stmt_0_0_eval_cond_0_0:
	mov rax, 1
	ret
cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_0cond_stmt_0_else_0else_stmt_0cond_stmt_0_0_then_execute_body:
	call cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_0cond_stmt_0_else_0else_stmt_0cond_stmt_0_0_then_0variable_assignment_0
	ret
cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_0cond_stmt_0_else_0else_stmt_0cond_stmt_0_0_then_0variable_assignment_0:
	call cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_0cond_stmt_0_else_0else_stmt_0cond_stmt_0_0_then_0variable_assignment_0_variable_expr_eval_0_0
	mov [variable_label], rax
	ret
cond_stmt_1_else_0else_stmt_0cond_stmt_0_0_then_0cond_stmt_0_else_0else_stmt_0cond_stmt_0_0_then_0variable_assignment_0_variable_expr_eval_0_0:
	mov rax, 4
	ret
return_stmt_2_return_2:
	call return_stmt_2_2
	mov rdi, rax
	mov rax, 60
	syscall
return_stmt_2_2:
	mov rax, [variable_label]
	ret
